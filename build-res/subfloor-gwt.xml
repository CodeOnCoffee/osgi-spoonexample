<!--===========================================================================
Copyright (c) 2009, Pentaho Engineering Team
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the Pentaho Corporation nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY Pentaho Engineering Team ''AS IS'' AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL <copyright holder> BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
============================================================================-->
<!--===========================================================================
    == SUBFLOOR-GWT ==
    
    $Rev: 75 $
    $Date: 2009-09-10 10:19:34 -0400 (Thu, 10 Sep 2009) $
    Project Home: http://code.google.com/p/subfloor/
    
    Provides default targets for building GWT applications.
    ============================================================================-->
<project name="subfloor-gwt" basedir="." default="default" xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- Define the default location of the common build file -->
  <property name="subfloor-pkg.file"
            value="subfloor-pkg.xml"
            description="This is the location of the subfloor-pkg.xml file" />

  <!-- Import the common_build.xml file which contains all the default tasks -->
  <import file="${subfloor-pkg.file}" />

  <property name="gwt.output.dir"
            value="${bin.dir}/gwt/output"
            description="Base directory that holds all gwt generated files" />
  <property name="gwt-dev.revision" value="1.6.4" description="The release of GWT-dev to download and install" />
  <property name="gwt-log-level" value="INFO" description="The log level for GWT Compile" />
  <property name="gwt-style" value="OBF" description="Style in which javascript should be generated, options include OBF[uscated], PRETTY, and DETAILED"/>
	<property name="gwtdevlib.dir"
	            value="${basedir}/gwtdevlib"
	            description="Location of the libraries needed to develop GWT" />
  <property name="gwt-dev.zipfile"
            value="${gwtdevlib.dir}/gwt-dev-libs.zip"
            description="The download location of the GWT-dev zip file" />
  <property name="gwt-dev.jarfile"
            value="${gwtdevlib.dir}/gwt-dev-${gwt-dev.revision}.jar"
            description="The download location of the GWT-dev jar file" />
  <property name="codegenlib.dir"
            value="${basedir}/codegen-lib"
            description="Location of the libraries needed for code generation" />
  <property name="gwt-compile.maxmemory" value="512M" description="maxmemory argument for com.google.gwt.dev.GWTCompiler java task" />
  <property name="gwt-compile.localWorkers" value="4" description="number of threads to use for running parallel compilation" />
  <property name="gwt-compile.maxstack" value="1024k" description="vm stack size setting" />

	<path id="classpath">
	<fileset dir="${devlib.dir}">
		<include name="*.jar" />
	</fileset>
    <fileset dir="${codegenlib.dir}">
      <include name="*.jar" />
    </fileset>
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
    </fileset>
    <pathelement path="${src.dir}" />
  </path>	
	
  <!-- Setup the classpath used for testing -->
  <path id="test.classpath">
    <fileset dir="${devlib.dir}">
      <include name="*" />
    </fileset>
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
    </fileset>
    <fileset dir="${testlib.dir}">
      <include name="*.jar" />
    </fileset>
  	<fileset dir="${gwtdevlib.dir}">
  	  <include name="*.jar" />
  	</fileset>
    <dirset dir="${classes.dir}" />
    <dirset dir="${testclasses.dir}" />
  </path>
  <!--=======================================================================
	    init (override)
	    
	    ====================================================================-->
  <target name="init" depends="subfloor.init">
    <mkdir dir="${codegenlib.dir}" />
  </target>

  <!--=======================================================================
	    clean (override)
	    
	    Removes all the files generated from the build process.
	    ====================================================================-->
  <target name="clean" depends="subfloor.clean"
          description="Cleans all the files generated from a build with the exception of IVY-downloaded jars (see clean-all)">
    <delete file="${bin.dir}/.gwtBuild*" />
  </target>

  <!--=======================================================================
      clean-jars (override)
      
      Removes all the libraries that have been downloaded for this project
      using the ivy dependencies.
      ====================================================================-->
  <target name="clean-jars" depends="clean-codegen,subfloor.clean-jars"/>
  
  <!--=======================================================================
      clean-codegen
      
      Removes all the codegen libraries that have been downloaded for this project
      using the ivy dependencies.
      ====================================================================-->
  <target name="clean-codegen">
    <delete dir="${codegenlib.dir}" />
  </target>

  <!--=======================================================================
      resolve (override)
      
      Override to include resolution of IVY codegen and runtime configurations
      ====================================================================-->
  <target name="resolve" depends="resolve-codegen,resolve-runtime,subfloor.resolve" description="Resolves all IVY configurations"/>


  <!--=======================================================================
      resolve-codgen (override)
      
      Override to use OS-specific IVY configurations
      ====================================================================-->
  <target name="resolve-codegen" depends="resolve-init">
    <ivy:resolve file="ivy.xml" conf="codegen-${os.classifier}" />
    <ivy:retrieve conf="codegen-${os.classifier}" pattern="${codegenlib.dir}/[module]-[revision](-[classifier]).[ext]" />
  </target>


  <!--=======================================================================
      gwt-compile
      
      Performs GWT Compile which generates JavaScript
      ====================================================================-->
  <target name="gwt-compile"
          depends="gwt-compile.check, init"
          unless="gwtBuild.notRequired"
          description="Perform GWT Compile">
    <java classname="com.google.gwt.dev.Compiler" fork="true" failonerror="true" maxmemory="${gwt-compile.maxmemory}">
 	  <classpath refid="classpath"/>
      <jvmarg value="-Xss${gwt-compile.maxstack}"/>    	
      <arg value="-war" />
      <arg value="${gwt.output.dir}" />
      <arg value="${gwt-module.path}" />
      <arg value="-localWorkers" />
      <arg value="${gwt-compile.localWorkers}" />
      <arg value="-logLevel" />
      <arg value="${gwt-log-level}" />
      <arg value="-style" />
      <arg value="${gwt-style}" />
    </java>
    <touch file="${bin.dir}/.gwtBuild-${gwt-module.path}" />
  </target>

  
  <!--=======================================================================
      gwt-compile.check
      
      Detects changes in source since the last gwt-compile and sets a flag
      so gwt-compile can skip when nothing has changed
      ====================================================================-->
  <target name="gwt-compile.check">
    <uptodate property="gwtBuild.notRequired" targetfile="${bin.dir}/.gwtBuild-${gwt-module.path}">
      <srcfiles dir="${src.dir}" />
    </uptodate>
  </target>

  
  <!--=======================================================================
      assemble (override)
      
      Overriden to force gwt javascript compilation
      ====================================================================-->
  <target name="assemble" depends="gwt-compile,assemble.init,assemble.copy-libs">
    <copy todir="${stage.dir}">
      <fileset dir="${gwt.output.dir}">
        <exclude name=".gwt-tmp/" />
        <exclude name="*-aux/" />
      </fileset>
    </copy>
  </target>


  <!--=======================================================================
      install-gwt-dev
      
      Downloads and installs gwt-dev jars and native libraries
      ====================================================================-->
  <target name="install-gwt-dev" depends="gwt-dev.download" description="Installs gwt-dev jar and native libraries">
    <unzip src="${gwt-dev.zipfile}" dest="${gwtdevlib.dir}" />
    <delete file="${gwt-dev.zipfile}" />

    <echo>
      *************************************************************************************************
      ** Gwt dev files have been installed to ${gwtdevlib.dir}.
      ** Make sure ${gwt-dev.jarfile} 
      ** appears before other jars in your IDE's classpath, 
      ** otherwise running in hosted mode may fail.
      *************************************************************************************************
    </echo>
  </target>


  <!--=======================================================================
      gwt-dev.download
      
      Downloads GWT dev libraries if they don't already exist
      ====================================================================-->
  <target name="gwt-dev.download" depends="install-ivy,init">
    <condition property="maven.classifier" value="windows">
      <isset property="isWindows" />
    </condition>
    <condition property="maven.classifier" value="linux">
      <isset property="isLinux" />
    </condition>
    <condition property="maven.classifier" value="mac">
      <isset property="isMac" />
    </condition>

    <get src="http://repo1.maven.org/maven2/com/google/gwt/gwt-dev/${gwt-dev.revision}/gwt-dev-${gwt-dev.revision}-${maven.classifier}-libs.zip"
         dest="${gwt-dev.zipfile}" />
    <get src="http://repo1.maven.org/maven2/com/google/gwt/gwt-dev/${gwt-dev.revision}/gwt-dev-${gwt-dev.revision}-${maven.classifier}.jar"
         dest="${gwt-dev.jarfile}" />
  </target>

</project>
